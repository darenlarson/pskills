{"ast":null,"code":"import _toConsumableArray from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_LINKED_START, GET_LINKED_SUCCESS, GET_LINKED_FAILURE, ADD_WORKER_START, ADD_WORKER_SUCCESS, ADD_WORKER_FAILURE, UPDATE_WORKER_START, UPDATE_WORKER_SUCCESS, UPDATE_WORKER_FAILURE, DELETE_WORKER_START, DELETE_WORKER_SUCCESS, DELETE_WORKER_FAILURE, LOGIN_USER_START, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE, LOGOUT_USER, PERSIST_LOGIN, ADD_PRISON_START, ADD_PRISON_SUCCESS, ADD_PRISON_FAILURE, GET_PRISONS_START, GET_PRISONS_SUCCESS, GET_PRISONS_FAILURE, GET_WORKERS_START, GET_WORKERS_SUCCESS, GET_WORKERS_FAILURE, DISMISS_LOGIN_ERROR } from \"../actions/\";\nvar initialState = {\n  prisonsarray: [],\n  linkedworkers: [],\n  currentprison: {},\n  error: \"\",\n  loginerror: \"\",\n  userobject: \"\",\n  jwt: \"\",\n  prisonId: \"\",\n  loggedin: false,\n  isLoading: false,\n  gpLoading: false,\n  gwLoading: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_LINKED_START:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case GET_LINKED_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        linkedworkers: action.payload.map(function (prisoner) {\n          if (prisoner.availability === 0) {\n            return _objectSpread({}, prisoner, {\n              availability: false\n            });\n          } else if (prisoner.availability === 1) {\n            return _objectSpread({}, prisoner, {\n              availability: true\n            });\n          } else {\n            return prisoner;\n          }\n        })\n      });\n\n    case GET_LINKED_FAILURE:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.payload\n      });\n\n    case ADD_WORKER_START:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case ADD_WORKER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        linkedworkers: action.payload\n      });\n\n    case ADD_WORKER_FAILURE:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.payload\n      });\n\n    case UPDATE_WORKER_START:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case UPDATE_WORKER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        linkedworkers: action.payload\n      });\n\n    case UPDATE_WORKER_FAILURE:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.payload\n      });\n\n    case DELETE_WORKER_START:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case DELETE_WORKER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        linkedworkers: action.payload\n      });\n\n    case DELETE_WORKER_FAILURE:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.payload\n      });\n\n    case LOGIN_USER_START:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case LOGIN_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        userobject: action.payload,\n        jwt: action.payload.token,\n        prisonId: action.payload.id,\n        loggedin: true\n      });\n\n    case LOGIN_USER_FAILURE:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        loginerror: action.payload\n      });\n\n    case LOGOUT_USER:\n      return _objectSpread({}, state, {\n        jwt: \"\",\n        prisonId: \"\",\n        loggedin: false\n      });\n\n    case PERSIST_LOGIN:\n      return _objectSpread({}, state, {\n        loggedin: true,\n        jwt: action.payload.token,\n        prisonId: action.payload.id\n      });\n\n    case ADD_PRISON_START:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case ADD_PRISON_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        prisonsarray: [].concat(_toConsumableArray(state.prisonsarray), [action.payload])\n      });\n\n    case ADD_PRISON_FAILURE:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.payload\n      });\n\n    case GET_PRISONS_START:\n      return _objectSpread({}, state, {\n        gpLoading: true\n      });\n\n    case GET_PRISONS_SUCCESS:\n      return _objectSpread({}, state, {\n        gpLoading: false,\n        prisonsarray: action.payload\n      });\n\n    case GET_PRISONS_FAILURE:\n      return _objectSpread({}, state, {\n        gpLoading: false,\n        error: action.payload\n      });\n\n    case GET_WORKERS_START:\n      return _objectSpread({}, state, {\n        gwLoading: true\n      });\n\n    case GET_WORKERS_SUCCESS:\n      return _objectSpread({}, state, {\n        gwLoading: false,\n        currentprison: action.payload\n      });\n\n    case GET_WORKERS_FAILURE:\n      return _objectSpread({}, state, {\n        gwLoading: false,\n        error: action.payload\n      });\n\n    case DISMISS_LOGIN_ERROR:\n      return _objectSpread({}, state, {\n        loginerror: \"\"\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/darenlarson/Code/pskills/client/src/store/reducers/index.js"],"names":["GET_LINKED_START","GET_LINKED_SUCCESS","GET_LINKED_FAILURE","ADD_WORKER_START","ADD_WORKER_SUCCESS","ADD_WORKER_FAILURE","UPDATE_WORKER_START","UPDATE_WORKER_SUCCESS","UPDATE_WORKER_FAILURE","DELETE_WORKER_START","DELETE_WORKER_SUCCESS","DELETE_WORKER_FAILURE","LOGIN_USER_START","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","LOGOUT_USER","PERSIST_LOGIN","ADD_PRISON_START","ADD_PRISON_SUCCESS","ADD_PRISON_FAILURE","GET_PRISONS_START","GET_PRISONS_SUCCESS","GET_PRISONS_FAILURE","GET_WORKERS_START","GET_WORKERS_SUCCESS","GET_WORKERS_FAILURE","DISMISS_LOGIN_ERROR","initialState","prisonsarray","linkedworkers","currentprison","error","loginerror","userobject","jwt","prisonId","loggedin","isLoading","gpLoading","gwLoading","reducer","state","action","type","payload","map","prisoner","availability","token","id"],"mappings":"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","sourcesContent":["import {\n  GET_LINKED_START,\n  GET_LINKED_SUCCESS,\n  GET_LINKED_FAILURE,\n  ADD_WORKER_START,\n  ADD_WORKER_SUCCESS,\n  ADD_WORKER_FAILURE,\n  UPDATE_WORKER_START,\n  UPDATE_WORKER_SUCCESS,\n  UPDATE_WORKER_FAILURE,\n  DELETE_WORKER_START,\n  DELETE_WORKER_SUCCESS,\n  DELETE_WORKER_FAILURE,\n  LOGIN_USER_START,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAILURE,\n  LOGOUT_USER,\n  PERSIST_LOGIN,\n  ADD_PRISON_START,\n  ADD_PRISON_SUCCESS,\n  ADD_PRISON_FAILURE,\n  GET_PRISONS_START,\n  GET_PRISONS_SUCCESS,\n  GET_PRISONS_FAILURE,\n  GET_WORKERS_START,\n  GET_WORKERS_SUCCESS,\n  GET_WORKERS_FAILURE,\n  DISMISS_LOGIN_ERROR\n} from \"../actions/\";\n\nconst initialState = {\n  prisonsarray: [],\n  linkedworkers: [],\n  currentprison: {},\n  error: \"\",\n  loginerror: \"\",\n  userobject: \"\",\n  jwt: \"\",\n  prisonId: \"\",\n  loggedin: false,\n  isLoading: false,\n  gpLoading: false,\n  gwLoading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LINKED_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case GET_LINKED_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        linkedworkers: action.payload.map(prisoner => {\n          if (prisoner.availability === 0) {\n            return { ...prisoner, availability: false };\n          } else if (prisoner.availability === 1) {\n            return { ...prisoner, availability: true };\n          } else {\n            return prisoner;\n          }\n        })\n      };\n    case GET_LINKED_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case ADD_WORKER_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case ADD_WORKER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        linkedworkers: action.payload\n      };\n    case ADD_WORKER_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case UPDATE_WORKER_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case UPDATE_WORKER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        linkedworkers: action.payload\n      };\n    case UPDATE_WORKER_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case DELETE_WORKER_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case DELETE_WORKER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        linkedworkers: action.payload\n      };\n    case DELETE_WORKER_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case LOGIN_USER_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        userobject: action.payload,\n        jwt: action.payload.token,\n        prisonId: action.payload.id,\n        loggedin: true\n      };\n    case LOGIN_USER_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        loginerror: action.payload\n      };\n    case LOGOUT_USER:\n      return {\n        ...state,\n        jwt: \"\",\n        prisonId: \"\",\n        loggedin: false\n      };\n    case PERSIST_LOGIN:\n      return {\n        ...state,\n        loggedin: true,\n        jwt: action.payload.token,\n        prisonId: action.payload.id\n      };\n    case ADD_PRISON_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case ADD_PRISON_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        prisonsarray: [...state.prisonsarray, action.payload]\n      };\n    case ADD_PRISON_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case GET_PRISONS_START:\n      return {\n        ...state,\n        gpLoading: true\n      };\n    case GET_PRISONS_SUCCESS:\n      return {\n        ...state,\n        gpLoading: false,\n        prisonsarray: action.payload\n      };\n    case GET_PRISONS_FAILURE:\n      return {\n        ...state,\n        gpLoading: false,\n        error: action.payload\n      };\n    case GET_WORKERS_START:\n      return {\n        ...state,\n        gwLoading: true\n      };\n    case GET_WORKERS_SUCCESS:\n      return {\n        ...state,\n        gwLoading: false,\n        currentprison: action.payload\n      };\n    case GET_WORKERS_FAILURE:\n      return {\n        ...state,\n        gwLoading: false,\n        error: action.payload\n      };\n    case DISMISS_LOGIN_ERROR:\n      return {\n        ...state,\n        loginerror: \"\"\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}