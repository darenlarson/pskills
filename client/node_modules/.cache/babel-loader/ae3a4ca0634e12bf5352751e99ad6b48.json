{"ast":null,"code":"import axios from \"axios\";\nexport var GET_PRISONS_START = \"GET_PRISONS_START\";\nexport var GET_PRISONS_SUCCESS = \"GET_PRISONS_SUCCESS\";\nexport var GET_PRISONS_FAILURE = \"GET_PRISONS_FAILURE\";\nexport var GET_WORKERS_START = \"GET_WORKERS_START\";\nexport var GET_WORKERS_SUCCESS = \"GET_WORKERS_SUCCESS\";\nexport var GET_WORKERS_FAILURE = \"GET_WORKERS_FAILURE\";\nvar PrisonUrl = \"https://prisoner-skills-backend.herokuapp.com/api/prisons\";\nexport var getPrisons = function getPrisons() {\n  return function (dispatch) {\n    dispatch({\n      type: GET_PRISONS_START\n    });\n    axios.get(\"\".concat(PrisonUrl)).then(function (res) {\n      return dispatch({\n        type: GET_PRISONS_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_PRISONS_FAILURE,\n        payload: err\n      });\n    });\n  };\n};\nexport var getPrisonsWorkers = function getPrisonsWorkers(id) {\n  return function (dispatch) {\n    console.log(\"getting workers\", id);\n    dispatch({\n      type: GET_WORKERS_START\n    });\n    axios.get(\"\".concat(PrisonUrl, \"/\").concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_WORKERS_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_WORKERS_FAILURE,\n        payload: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/darenlarson/Code/pskills/client/src/store/actions/EmployerActions.js"],"names":["axios","GET_PRISONS_START","GET_PRISONS_SUCCESS","GET_PRISONS_FAILURE","GET_WORKERS_START","GET_WORKERS_SUCCESS","GET_WORKERS_FAILURE","PrisonUrl","getPrisons","dispatch","type","get","then","res","payload","data","catch","err","getPrisonsWorkers","id","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,IAAMC,SAAS,GAAG,2DAAlB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACxCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACAD,IAAAA,KAAK,CACJW,GADD,WACQJ,SADR,GAECK,IAFD,CAEM,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,mBAAR;AAA6BY,QAAAA,OAAO,EAAED,GAAG,CAACE;AAA1C,OAAD,CAAZ;AAAA,KAFT,EAGCC,KAHD,CAGO,UAAAC,GAAG;AAAA,aAAIR,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP,mBAAR;AAA6BW,QAAAA,OAAO,EAAEG;AAAtC,OAAD,CAAZ;AAAA,KAHV;AAIH,GANyB;AAAA,CAAnB;AAQP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,EAAD;AAAA,SAAQ,UAAAV,QAAQ,EAAI;AACjDW,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,EAA/B;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACAJ,IAAAA,KAAK,CACJW,GADD,WACQJ,SADR,cACqBY,EADrB,GAECP,IAFD,CAEM,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,mBAAR;AAA6BS,QAAAA,OAAO,EAAED,GAAG,CAACE;AAA1C,OAAD,CAAZ;AAAA,KAFT,EAGCC,KAHD,CAGO,UAAAC,GAAG;AAAA,aAAIR,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEJ,mBAAR;AAA6BQ,QAAAA,OAAO,EAAEG;AAAtC,OAAD,CAAZ;AAAA,KAHV;AAIH,GAPgC;AAAA,CAA1B","sourcesContent":["import axios from \"axios\"\n\nexport const GET_PRISONS_START = \"GET_PRISONS_START\"\nexport const GET_PRISONS_SUCCESS = \"GET_PRISONS_SUCCESS\"\nexport const GET_PRISONS_FAILURE = \"GET_PRISONS_FAILURE\"\nexport const GET_WORKERS_START = \"GET_WORKERS_START\"\nexport const GET_WORKERS_SUCCESS = \"GET_WORKERS_SUCCESS\"\nexport const GET_WORKERS_FAILURE = \"GET_WORKERS_FAILURE\" \n\nconst PrisonUrl = \"https://prisoner-skills-backend.herokuapp.com/api/prisons\";\n\nexport const getPrisons = () => dispatch => {\n    dispatch({ type: GET_PRISONS_START })\n    axios\n    .get(`${PrisonUrl}`)\n    .then(res => dispatch({ type: GET_PRISONS_SUCCESS, payload: res.data }))\n    .catch(err => dispatch({ type: GET_PRISONS_FAILURE, payload: err}))\n}\n\nexport const getPrisonsWorkers = (id) => dispatch => {\n    console.log(\"getting workers\", id)\n    dispatch({ type: GET_WORKERS_START })\n    axios\n    .get(`${PrisonUrl}/${id}`)\n    .then(res => dispatch({ type: GET_WORKERS_SUCCESS, payload: res.data }))\n    .catch(err => dispatch({ type: GET_WORKERS_FAILURE, payload: err }))\n}"]},"metadata":{},"sourceType":"module"}