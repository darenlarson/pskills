{"ast":null,"code":"import _classCallCheck from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/darenlarson/Code/pskills/client/src/views/AdminView.js\";\nimport React from \"react\";\nimport \"reactstrap\";\nimport WorkersMgmt from \"../components/Admin/WorkersMgmt\";\nimport PrisonFactory from \"../components/Admin/PrisonFactory\";\nimport { getLinkedWorkers, addWorker, updateWorker, deleteWorker, addPrison, getPrisons } from \"../store/actions\";\nimport { connect } from \"react-redux\";\n\nvar AdminView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminView, _React$Component);\n\n  function AdminView() {\n    _classCallCheck(this, AdminView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AdminView).apply(this, arguments));\n  }\n\n  _createClass(AdminView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getLinkedWorkers(this.props.prisonIdSTORE);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.prisonsarrayStore.map(function (prison) {\n        return prison.id;\n      }).includes(this.props.prisonIdSTORE) ? React.createElement(WorkersMgmt, {\n        handleLogOut: this.props.handleLogOut,\n        getLinkedWorkers: this.props.getLinkedWorkers,\n        addWorker: this.props.addWorker,\n        updateWorker: this.props.updateWorker,\n        deleteWorker: this.props.deleteWorker,\n        linkedworkersStore: this.props.linkedworkersStore,\n        error: this.props.errorStore,\n        userobjectSTORE: this.props.userobjectSTORE,\n        prisonIdSTORE: this.props.prisonIdSTORE,\n        jwtSTORE: this.props.jwtSTORE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }) : React.createElement(PrisonFactory, {\n        prisonsarrayStore: this.props.prisonsarrayStore,\n        addPrison: this.props.addPrison,\n        jwtSTORE: this.props.jwtSTORE,\n        prisonIdSTORE: this.props.prisonIdSTORE,\n        gpLoading: this.props.gpLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AdminView;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    prisonsarrayStore: state.prisonsarray,\n    linkedworkersStore: state.linkedworkers,\n    errorStore: state.error,\n    userobjectSTORE: state.userobject,\n    prisonIdSTORE: state.prisonId,\n    jwtSTORE: state.jwt,\n    gpLoading: state.gpLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getLinkedWorkers: getLinkedWorkers,\n  addWorker: addWorker,\n  updateWorker: updateWorker,\n  deleteWorker: deleteWorker,\n  addPrison: addPrison,\n  getPrisons: getPrisons\n})(AdminView);","map":{"version":3,"sources":["/Users/darenlarson/Code/pskills/client/src/views/AdminView.js"],"names":["React","WorkersMgmt","PrisonFactory","getLinkedWorkers","addWorker","updateWorker","deleteWorker","addPrison","getPrisons","connect","AdminView","props","prisonIdSTORE","prisonsarrayStore","map","prison","id","includes","handleLogOut","linkedworkersStore","errorStore","userobjectSTORE","jwtSTORE","gpLoading","Component","mapStateToProps","state","prisonsarray","linkedworkers","error","userobject","prisonId","jwt"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAe,YAAf;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SACEC,gBADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,SALF,EAMEC,UANF,QAOO,kBAPP;AAQA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,S;;;;;;;;;;;;;wCAEgB;AAClB,WAAKC,KAAL,CAAWR,gBAAX,CAA4B,KAAKQ,KAAL,CAAWC,aAAvC;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,iBAAX,CACEC,GADF,CACM,UAAAC,MAAM,EAAI;AACb,eAAOA,MAAM,CAACC,EAAd;AACD,OAHF,EAIEC,QAJF,CAIW,KAAKN,KAAL,CAAWC,aAJtB,IAKC,oBAAC,WAAD;AACE,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWO,YAD3B;AAEE,QAAA,gBAAgB,EAAE,KAAKP,KAAL,CAAWR,gBAF/B;AAGE,QAAA,SAAS,EAAE,KAAKQ,KAAL,CAAWP,SAHxB;AAIE,QAAA,YAAY,EAAE,KAAKO,KAAL,CAAWN,YAJ3B;AAKE,QAAA,YAAY,EAAE,KAAKM,KAAL,CAAWL,YAL3B;AAME,QAAA,kBAAkB,EAAE,KAAKK,KAAL,CAAWQ,kBANjC;AAOE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,UAPpB;AAQE,QAAA,eAAe,EAAE,KAAKT,KAAL,CAAWU,eAR9B;AASE,QAAA,aAAa,EAAE,KAAKV,KAAL,CAAWC,aAT5B;AAUE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWW,QAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALD,GAkBC,oBAAC,aAAD;AACE,QAAA,iBAAiB,EAAE,KAAKX,KAAL,CAAWE,iBADhC;AAEE,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWJ,SAFxB;AAGE,QAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWW,QAHvB;AAIE,QAAA,aAAa,EAAE,KAAKX,KAAL,CAAWC,aAJ5B;AAKE,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWY,SALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,CADF;AA8BD;;;;EArCqBvB,KAAK,CAACwB,S;;AAwC9B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCb,IAAAA,iBAAiB,EAAEa,KAAK,CAACC,YADO;AAEhCR,IAAAA,kBAAkB,EAAEO,KAAK,CAACE,aAFM;AAGhCR,IAAAA,UAAU,EAAEM,KAAK,CAACG,KAHc;AAIhCR,IAAAA,eAAe,EAAEK,KAAK,CAACI,UAJS;AAKhClB,IAAAA,aAAa,EAAEc,KAAK,CAACK,QALW;AAMhCT,IAAAA,QAAQ,EAAEI,KAAK,CAACM,GANgB;AAOhCT,IAAAA,SAAS,EAAEG,KAAK,CAACH;AAPe,GAAL;AAAA,CAA7B;;AAUA,eAAed,OAAO,CACpBgB,eADoB,EAEpB;AAAEtB,EAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBC,EAAAA,SAAS,EAATA,SAApB;AAA+BC,EAAAA,YAAY,EAAZA,YAA/B;AAA6CC,EAAAA,YAAY,EAAZA,YAA7C;AAA2DC,EAAAA,SAAS,EAATA,SAA3D;AAAsEC,EAAAA,UAAU,EAAVA;AAAtE,CAFoB,CAAP,CAGbE,SAHa,CAAf","sourcesContent":["import React from \"react\";\nimport {} from \"reactstrap\";\nimport WorkersMgmt from \"../components/Admin/WorkersMgmt\";\nimport PrisonFactory from \"../components/Admin/PrisonFactory\";\nimport {\n  getLinkedWorkers,\n  addWorker,\n  updateWorker,\n  deleteWorker,\n  addPrison,\n  getPrisons,\n} from \"../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass AdminView extends React.Component {\n\n  componentDidMount() {\n    this.props.getLinkedWorkers(this.props.prisonIdSTORE);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.prisonsarrayStore\n          .map(prison => {\n            return prison.id;\n          })\n          .includes(this.props.prisonIdSTORE) ? (\n          <WorkersMgmt\n            handleLogOut={this.props.handleLogOut}\n            getLinkedWorkers={this.props.getLinkedWorkers}\n            addWorker={this.props.addWorker}\n            updateWorker={this.props.updateWorker}\n            deleteWorker={this.props.deleteWorker}\n            linkedworkersStore={this.props.linkedworkersStore}\n            error={this.props.errorStore}\n            userobjectSTORE={this.props.userobjectSTORE}\n            prisonIdSTORE={this.props.prisonIdSTORE}\n            jwtSTORE={this.props.jwtSTORE}\n          />\n        ) : (\n          <PrisonFactory\n            prisonsarrayStore={this.props.prisonsarrayStore}\n            addPrison={this.props.addPrison}\n            jwtSTORE={this.props.jwtSTORE}\n            prisonIdSTORE={this.props.prisonIdSTORE}\n            gpLoading={this.props.gpLoading}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  prisonsarrayStore: state.prisonsarray,\n  linkedworkersStore: state.linkedworkers,\n  errorStore: state.error,\n  userobjectSTORE: state.userobject,\n  prisonIdSTORE: state.prisonId,\n  jwtSTORE: state.jwt,\n  gpLoading: state.gpLoading\n});\n\nexport default connect(\n  mapStateToProps,\n  { getLinkedWorkers, addWorker, updateWorker, deleteWorker, addPrison, getPrisons }\n)(AdminView);\n"]},"metadata":{},"sourceType":"module"}