{"ast":null,"code":"import _classCallCheck from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/darenlarson/Code/pskills/client/src/components/Employer/ProfilesList.js\";\nimport React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport { Jumbotron, Container, Table, Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nvar ProfilesList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfilesList, _React$Component);\n\n  function ProfilesList(props) {\n    var _this;\n\n    _classCallCheck(this, ProfilesList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfilesList).call(this, props));\n\n    _this.viewprisoner = function (id) {\n      _this.setState({\n        viewid: id\n      });\n    };\n\n    _this.parseName = function (name) {\n      return name[0].toUpperCase();\n    };\n\n    _this.parseAvailability = function (availability) {\n      if (availability) {\n        return \"Yes\";\n      } else {\n        return \"No\";\n      }\n    };\n\n    _this.toggleModal = function (id) {\n      if (_this.state.modal) {\n        _this.setState({\n          modal: false,\n          viewid: \"\"\n        });\n      } else {\n        _this.setState({\n          modal: true,\n          viewid: id\n        });\n      }\n    };\n\n    _this.conditionalRender = function () {\n      if (_this.props.prison.prisoners) {\n        return _this.props.prison.prisoners.map(function (_ref) {\n          var id = _ref.id,\n              name = _ref.name,\n              picture = _ref.picture,\n              skills = _ref.skills,\n              availability = _ref.availability;\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            scope: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, _this.parseName(name)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, skills), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, _this.parseAvailability(availability)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(Button, {\n            onClick: function onClick() {\n              return _this.toggleModal(id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"Expand Profile\")));\n        });\n      }\n    };\n\n    _this.parsebyID = function (stateid) {\n      return _this.props.prison.prisoners.find(function (prisoner) {\n        return prisoner.id === stateid;\n      });\n    };\n\n    _this.conditionalModal = function () {\n      if (_this.state.modal) {\n        return React.createElement(Modal, {\n          isOpen: _this.state.modal,\n          toggle: _this.toggleModal,\n          className: _this.props.ProfileModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: _this.toggleModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Worker First Initial:\", \" \", _this.parseName(_this.parsebyID(_this.state.viewid).name)), React.createElement(\"div\", {\n          className: \"ModalFlex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"ModalImage\",\n          src: \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chiesa_di_San_Giorgio_Modena%2C_Santo.jpg\",\n          alt: \"Mug shot of Worker\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Worker Skills\"), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, _this.parsebyID(_this.state.viewid).skills.split(\",\").map(function (skill) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \" \", skill, \" \");\n        }))), React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam finibus justo eu nulla pretium interdum. Vestibulum suscipit ipsum sem, ac placerat arcu facilisis nec. Maecenas et tellus sit amet velit pharetra mollis. Maecenas nunc lectus, viverra pellentesque viverra in, tempus ac risus. Vivamus iaculis orci vel consequat tempor. Suspendisse consequat convallis sem, ac pharetra eros molestie ac. Vivamus quis dui faucibus, porta lectus sit amet, iaculis nunc.\")), React.createElement(ModalFooter, {\n          className: \"ModalFoot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Available for Work Leave:\", \" \", _this.parseAvailability(_this.parsebyID(_this.state.viewid).avaiability), React.createElement(Button, {\n          color: \"secondary\",\n          onClick: _this.toggleModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Go Back\")));\n      }\n    };\n\n    _this.state = {\n      modal: false,\n      viewid: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ProfilesList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPrisonsWorkers(this.props.currentlyviewing);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"PrisonDetailsWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        onClick: function onClick() {\n          return _this2.props.clearViewing();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \" \", \"Back To Prisons List\"), React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.props.prison.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Location: \", this.props.prison.location), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Phone Number: \", this.props.prison.phoneNumber))), this.props.gwLoading ? React.createElement(Loader, {\n        type: \"TailSpin\",\n        color: \"#2a4a45\",\n        height: \"30%\",\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }) : React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"First Initial\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Available for Leave\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"View Details\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, this.conditionalRender())), this.conditionalModal());\n    }\n  }]);\n\n  return ProfilesList;\n}(React.Component);\n\nexport default ProfilesList;","map":{"version":3,"sources":["/Users/darenlarson/Code/pskills/client/src/components/Employer/ProfilesList.js"],"names":["React","Loader","Jumbotron","Container","Table","Button","Modal","ModalHeader","ModalBody","ModalFooter","ProfilesList","props","viewprisoner","id","setState","viewid","parseName","name","toUpperCase","parseAvailability","availability","toggleModal","state","modal","conditionalRender","prison","prisoners","map","picture","skills","parsebyID","stateid","find","prisoner","conditionalModal","ProfileModal","split","skill","avaiability","getPrisonsWorkers","currentlyviewing","clearViewing","location","phoneNumber","gwLoading","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  Jumbotron,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass ProfilesList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewid: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.getPrisonsWorkers(this.props.currentlyviewing);\n  }\n\n  viewprisoner = id => {\n    this.setState({ viewid: id });\n  };\n\n  parseName = name => {\n    return name[0].toUpperCase();\n  };\n\n  parseAvailability = availability => {\n    if (availability) {\n      return \"Yes\";\n    } else {\n      return \"No\";\n    }\n  };\n\n  toggleModal = id => {\n    if (this.state.modal) {\n      this.setState({ modal: false, viewid: \"\" });\n    } else {\n      this.setState({ modal: true, viewid: id });\n    }\n  };\n\n  conditionalRender = () => {\n    if (this.props.prison.prisoners) {\n      return this.props.prison.prisoners.map(\n        ({ id, name, picture, skills, availability }) => (\n          <tr>\n            <th scope=\"row\">{this.parseName(name)}</th>\n            <td>{skills}</td>\n            <td>{this.parseAvailability(availability)}</td>\n            <td>\n              <Button onClick={() => this.toggleModal(id)}>\n                Expand Profile\n              </Button>\n            </td>\n          </tr>\n        )\n      );\n    }\n  };\n\n  parsebyID = stateid => {\n    return this.props.prison.prisoners.find(prisoner => {\n      return prisoner.id === stateid;\n    });\n  };\n\n  conditionalModal = () => {\n    if (this.state.modal) {\n      return (\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggleModal}\n          className={this.props.ProfileModal}\n        >\n          <ModalHeader toggle={this.toggleModal}>\n            Worker First Initial:{\" \"}\n            {this.parseName(this.parsebyID(this.state.viewid).name)}\n          </ModalHeader>\n          <div className=\"ModalFlex\">\n            <ModalBody>\n              <img\n                className=\"ModalImage\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chiesa_di_San_Giorgio_Modena%2C_Santo.jpg\"\n                alt=\"Mug shot of Worker\"\n              />\n              <p>Worker Skills</p>\n              <ul>\n                {this.parsebyID(this.state.viewid)\n                  .skills.split(\",\")\n                  .map(skill => {\n                    return <li> {skill} </li>;\n                  })}\n              </ul>\n            </ModalBody>\n            <ModalBody>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n              finibus justo eu nulla pretium interdum. Vestibulum suscipit ipsum\n              sem, ac placerat arcu facilisis nec. Maecenas et tellus sit amet\n              velit pharetra mollis. Maecenas nunc lectus, viverra pellentesque\n              viverra in, tempus ac risus. Vivamus iaculis orci vel consequat\n              tempor. Suspendisse consequat convallis sem, ac pharetra eros\n              molestie ac. Vivamus quis dui faucibus, porta lectus sit amet,\n              iaculis nunc.\n            </ModalBody>\n          </div>\n          <ModalFooter className=\"ModalFoot\">\n            Available for Work Leave:{\" \"}\n            {this.parseAvailability(\n              this.parsebyID(this.state.viewid).avaiability\n            )}\n            <Button color=\"secondary\" onClick={this.toggleModal}>\n              Go Back\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"PrisonDetailsWrapper\">\n        <Button size=\"lg\" onClick={() => this.props.clearViewing()}>\n          {\" \"}\n          Back To Prisons List\n        </Button>\n        <Jumbotron fluid>\n          <Container fluid>\n            <h2>{this.props.prison.name}</h2>\n            <p>Location: {this.props.prison.location}</p>\n            <p>Phone Number: {this.props.prison.phoneNumber}</p>\n          </Container>\n        </Jumbotron>\n        {this.props.gwLoading ? (\n            <Loader type=\"TailSpin\" color=\"#2a4a45\" height=\"30%\" width=\"20%\" />\n        ) : (\n        <Table>\n          <thead>\n            <tr>\n              <th>First Initial</th>\n              <th>Skills</th>\n              <th>Available for Leave</th>\n              <th>View Details</th>\n            </tr>\n          </thead>\n          <tbody>{this.conditionalRender()}</tbody>\n        </Table>\n        )}\n        {this.conditionalModal()}\n      </div>\n    );\n  }\n}\n\nexport default ProfilesList;\n"]},"metadata":{},"sourceType":"module"}