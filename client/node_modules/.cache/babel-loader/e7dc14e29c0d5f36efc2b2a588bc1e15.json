{"ast":null,"code":"import axios from \"axios\";\nexport var GET_LINKED_START = \"GET_LINKED_START\";\nexport var GET_LINKED_SUCCESS = \"GET_LINKED_SUCCESS\";\nexport var GET_LINKED_FAILURE = \"GET_LINKED_FAILURE\";\nexport var ADD_WORKER_START = \"ADD_WORKER_START\";\nexport var ADD_WORKER_SUCCESS = \"ADD_WORKER_SUCCESS\";\nexport var ADD_WORKER_FAILURE = \"ADD_WORKER_FAILURE\";\nexport var UPDATE_WORKER_START = \"UPDATE_WORKER_START\";\nexport var UPDATE_WORKER_SUCCESS = \"UPDATE_WORKER_SUCCESS\";\nexport var UPDATE_WORKER_FAILURE = \"UPDATE_WORKER_FAILURE\";\nexport var DELETE_WORKER_START = \"DELETE_WORKER_START\";\nexport var DELETE_WORKER_SUCCESS = \"DELETE_WORKER_SUCCESS\";\nexport var DELETE_WORKER_FAILURE = \"DELETE_WORKER_FAILURE\";\nexport var ADD_PRISON_START = \"ADD_PRISON_START\";\nexport var ADD_PRISON_SUCCESS = \"ADD_PRISON_SUCCESS\";\nexport var ADD_PRISON_FAILURE = \"ADD_PRISON_FAILURE\";\nvar PrisonUrl = \"https://prisoner-skills-backend.herokuapp.com/api/prisons\";\nvar ServerUrl = \"https://prisoner-skills-backend.herokuapp.com/api/prisoners\";\nvar LinkedProfiles = \"https://prisoner-skills-backend.herokuapp.com/api/prisoners/prison\";\nexport var getLinkedWorkers = function getLinkedWorkers(prisonId) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_LINKED_START\n    });\n    axios.get(\"\".concat(LinkedProfiles, \"/\").concat(prisonId)).then(function (res) {\n      dispatch({\n        type: GET_LINKED_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_LINKED_FAILURE,\n        payload: err\n      });\n    });\n  };\n};\nexport var addWorker = function addWorker(workerdata, authToken) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_WORKER_START\n    });\n    axios({\n      url: ServerUrl,\n      method: \"POST\",\n      data: workerdata,\n      headers: {\n        Authorization: authToken\n      }\n    }).then(function (res) {\n      dispatch({\n        type: ADD_WORKER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ADD_WORKER_FAILURE,\n        payload: err\n      });\n    });\n  };\n};\nexport var updateWorker = function updateWorker(workerdata, id, authToken) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_WORKER_START\n    });\n    axios({\n      url: \"\".concat(ServerUrl, \"/\").concat(id),\n      method: \"PUT\",\n      data: workerdata,\n      headers: {\n        Authorization: authToken\n      }\n    }).then(function (res) {\n      dispatch({\n        type: UPDATE_WORKER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: UPDATE_WORKER_FAILURE,\n        payload: err\n      });\n    });\n  };\n};\nexport var deleteWorker = function deleteWorker(id, authToken) {\n  return function (dispatch) {\n    dispatch({\n      type: DELETE_WORKER_START\n    });\n    axios({\n      url: \"\".concat(ServerUrl, \"/\").concat(id),\n      method: \"DELETE\",\n      headers: {\n        Authorization: authToken\n      }\n    }).then(function (res) {\n      dispatch({\n        type: DELETE_WORKER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: DELETE_WORKER_FAILURE,\n        payload: err\n      });\n    });\n  };\n};\nexport var addPrison = function addPrison(prisondata, authToken) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_PRISON_START\n    });\n    axios({\n      url: PrisonUrl,\n      method: \"POST\",\n      data: prisondata,\n      headers: {\n        Authorization: authToken\n      }\n    }).then(function (res) {\n      dispatch({\n        type: ADD_PRISON_SUCCESS,\n        payload: prisondata\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ADD_PRISON_FAILURE,\n        payload: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/darenlarson/Code/pskills/client/src/store/actions/AdminActions.js"],"names":["axios","GET_LINKED_START","GET_LINKED_SUCCESS","GET_LINKED_FAILURE","ADD_WORKER_START","ADD_WORKER_SUCCESS","ADD_WORKER_FAILURE","UPDATE_WORKER_START","UPDATE_WORKER_SUCCESS","UPDATE_WORKER_FAILURE","DELETE_WORKER_START","DELETE_WORKER_SUCCESS","DELETE_WORKER_FAILURE","ADD_PRISON_START","ADD_PRISON_SUCCESS","ADD_PRISON_FAILURE","PrisonUrl","ServerUrl","LinkedProfiles","getLinkedWorkers","prisonId","dispatch","type","get","then","res","payload","data","catch","err","addWorker","workerdata","authToken","url","method","headers","Authorization","updateWorker","id","deleteWorker","addPrison","prisondata"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const GET_LINKED_START = \"GET_LINKED_START\";\nexport const GET_LINKED_SUCCESS = \"GET_LINKED_SUCCESS\";\nexport const GET_LINKED_FAILURE = \"GET_LINKED_FAILURE\";\nexport const ADD_WORKER_START = \"ADD_WORKER_START\";\nexport const ADD_WORKER_SUCCESS = \"ADD_WORKER_SUCCESS\";\nexport const ADD_WORKER_FAILURE = \"ADD_WORKER_FAILURE\";\nexport const UPDATE_WORKER_START = \"UPDATE_WORKER_START\";\nexport const UPDATE_WORKER_SUCCESS = \"UPDATE_WORKER_SUCCESS\";\nexport const UPDATE_WORKER_FAILURE = \"UPDATE_WORKER_FAILURE\";\nexport const DELETE_WORKER_START = \"DELETE_WORKER_START\";\nexport const DELETE_WORKER_SUCCESS = \"DELETE_WORKER_SUCCESS\";\nexport const DELETE_WORKER_FAILURE = \"DELETE_WORKER_FAILURE\";\nexport const ADD_PRISON_START = \"ADD_PRISON_START\";\nexport const ADD_PRISON_SUCCESS = \"ADD_PRISON_SUCCESS\";\nexport const ADD_PRISON_FAILURE = \"ADD_PRISON_FAILURE\";\n\nconst PrisonUrl = \"https://prisoner-skills-backend.herokuapp.com/api/prisons\";\nconst ServerUrl = \"https://prisoner-skills-backend.herokuapp.com/api/prisoners\";\nconst LinkedProfiles =\n  \"https://prisoner-skills-backend.herokuapp.com/api/prisoners/prison\";\n\nexport const getLinkedWorkers = prisonId => dispatch => {\n  dispatch({ type: GET_LINKED_START });\n  axios\n    .get(`${LinkedProfiles}/${prisonId}`)\n    .then(res => {\n      dispatch({ type: GET_LINKED_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: GET_LINKED_FAILURE, payload: err });\n    });\n};\n\nexport const addWorker = (workerdata, authToken) => dispatch => {\n  dispatch({ type: ADD_WORKER_START });\n  axios({\n    url: ServerUrl,\n    method: \"POST\",\n    data: workerdata,\n    headers: {\n      Authorization: authToken\n    }\n  })\n    .then(res => {\n      dispatch({ type: ADD_WORKER_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: ADD_WORKER_FAILURE, payload: err });\n    });\n};\n\nexport const updateWorker = (workerdata, id, authToken) => dispatch => {\n  dispatch({ type: UPDATE_WORKER_START });\n  axios({\n    url: `${ServerUrl}/${id}`,\n    method: \"PUT\",\n    data: workerdata,\n    headers: {\n      Authorization: authToken\n    }\n  })\n    .then(res => {\n      dispatch({ type: UPDATE_WORKER_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: UPDATE_WORKER_FAILURE, payload: err });\n    });\n};\n\nexport const deleteWorker = (id, authToken) => dispatch => {\n  dispatch({ type: DELETE_WORKER_START });\n  axios({\n    url: `${ServerUrl}/${id}`,\n    method: \"DELETE\",\n    headers: {\n      Authorization: authToken\n    }\n  })\n    .then(res => {\n      dispatch({ type: DELETE_WORKER_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: DELETE_WORKER_FAILURE, payload: err });\n    });\n};\n\nexport const addPrison = (prisondata, authToken) => dispatch => {\n  dispatch({ type: ADD_PRISON_START });\n  axios({\n    url: PrisonUrl,\n    method: \"POST\",\n    data: prisondata,\n    headers: {\n      Authorization: authToken\n    }\n  })\n    .then(res => {\n      dispatch({ type: ADD_PRISON_SUCCESS, payload: prisondata });\n    })\n    .catch(err => {\n      dispatch({ type: ADD_PRISON_FAILURE, payload: err });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}