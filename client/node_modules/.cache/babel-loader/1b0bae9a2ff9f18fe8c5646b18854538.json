{"ast":null,"code":"import _defineProperty from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/darenlarson/Code/pskills/client/src/components/Admin/WorkersMgmt.js\";\nimport React from \"react\";\nimport { InputGroupButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, InputGroup, InputGroupText, InputGroupAddon, Input, Button } from \"reactstrap\";\nimport Workers from \"./Workers\";\n\nvar WorkersMgmt =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WorkersMgmt, _React$Component);\n\n  function WorkersMgmt(props) {\n    var _this;\n\n    _classCallCheck(this, WorkersMgmt);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorkersMgmt).call(this, props));\n\n    _this.toggleDropDown = function () {\n      return _this.setState(function (currentState) {\n        return {\n          dropdownOpen: !currentState.dropdownOpen\n        };\n      });\n    };\n\n    _this.toggleWlOn = function () {\n      _this.setState({\n        newworker: _objectSpread({}, _this.state.newworker, {\n          availability: true\n        })\n      });\n    };\n\n    _this.toggleWlOff = function () {\n      _this.setState({\n        newworker: _objectSpread({}, _this.state.newworker, {\n          availability: false\n        })\n      });\n    };\n\n    _this.handleChanges = function (event) {\n      _this.setState({\n        newworker: _objectSpread({}, _this.state.newworker, _defineProperty({}, event.target.name, event.target.value))\n      });\n    };\n\n    _this.handleSubmit = function (e, newworker) {\n      e.preventDefault();\n\n      _this.props.addWorker(_this.state.newworker, _this.props.jwtSTORE);\n\n      _this.setState({\n        newworker: {\n          name: \"\",\n          picture: \"\",\n          prisonId: _this.props.prisonIdSTORE,\n          availability: false,\n          skills: \"\"\n        }\n      });\n    };\n\n    _this.handleDelete = function (id, authToken) {\n      _this.props.deleteWorker(id, authToken);\n    };\n\n    _this.handleUpdate = function (workerdata, id, authToken) {\n      _this.props.updateWorker(workerdata, id, authToken);\n    };\n\n    _this.state = {\n      newworker: {\n        name: \"\",\n        picture: \"mock\",\n        prisonId: _this.props.prisonIdSTORE,\n        availability: false,\n        skills: \"\"\n      },\n      dropdownOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(WorkersMgmt, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      (localStorage.getItem(\"user\") === \"\\\"\\\"\" || !localStorage.getItem(\"user\")) && localStorage.setItem(\"user\", JSON.stringify(this.props.userobjectSTORE));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"WorkersMgmtWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"WorkerFormWrapper\",\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e, _this2.state.newworker);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        onClick: this.props.handleLogOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Log Out\"), React.createElement(InputGroup, {\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        className: \"Purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Worker Name:\")), React.createElement(Input, {\n        value: this.state.newworker.name,\n        type: \"text\",\n        name: \"name\",\n        onChange: this.handleChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(InputGroupButtonDropdown, {\n        addonType: \"append\",\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggleDropDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        className: \"Purple\",\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.newworker.availability ? \"AVAILABLE FOR WORK LEAVE\" : \"NOT AVAILABLE FOR WORK LEAVE\"), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        onClick: this.toggleWlOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Available for Work Leave\"), React.createElement(DropdownItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(DropdownItem, {\n        onClick: this.toggleWlOff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Not Available for Work Leave\")))), React.createElement(InputGroup, {\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        className: \"Purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"New Worker Skills (Seperate /w Commas):\")), React.createElement(Input, {\n        value: this.state.newworker.skills,\n        type: \"text\",\n        name: \"skills\",\n        onChange: this.handleChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"Purple\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Add Worker\")), React.createElement(Workers, {\n        jwtSTORE: this.props.jwtSTORE,\n        updateWorker: this.handleUpdate,\n        deleteWorker: this.handleDelete,\n        linkedworkersStore: this.props.linkedworkersStore,\n        error: this.props.errorStore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WorkersMgmt;\n}(React.Component);\n\nexport default WorkersMgmt;","map":{"version":3,"sources":["/Users/darenlarson/Code/pskills/client/src/components/Admin/WorkersMgmt.js"],"names":["React","InputGroupButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","InputGroup","InputGroupText","InputGroupAddon","Input","Button","Workers","WorkersMgmt","props","toggleDropDown","setState","currentState","dropdownOpen","toggleWlOn","newworker","state","availability","toggleWlOff","handleChanges","event","target","name","value","handleSubmit","e","preventDefault","addWorker","jwtSTORE","picture","prisonId","prisonIdSTORE","skills","handleDelete","id","authToken","deleteWorker","handleUpdate","workerdata","updateWorker","localStorage","getItem","setItem","JSON","stringify","userobjectSTORE","handleLogOut","linkedworkersStore","errorStore","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  InputGroupButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input,\n  Button\n} from \"reactstrap\";\nimport Workers from \"./Workers\";\n\nclass WorkersMgmt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newworker: {\n        name: \"\",\n        picture: \"mock\",\n        prisonId: this.props.prisonIdSTORE,\n        availability: false,\n        skills: \"\"\n      },\n      dropdownOpen: false\n    };\n  }\n\n  componentDidMount() {\n    (localStorage.getItem(\"user\") === \"\\\"\\\"\" || !localStorage.getItem(\"user\"))  && localStorage.setItem(\"user\", JSON.stringify(this.props.userobjectSTORE));\n  }\n\n  toggleDropDown = () =>\n    this.setState(currentState => ({\n      dropdownOpen: !currentState.dropdownOpen\n    }));\n\n  toggleWlOn = () => {\n    this.setState({\n      newworker: {\n        ...this.state.newworker,\n        availability: true\n      }\n    });\n  };\n\n  toggleWlOff = () => {\n    this.setState({\n      newworker: {\n        ...this.state.newworker,\n        availability: false\n      }\n    });\n  };\n\n  handleChanges = event => {\n    this.setState({\n      newworker: {\n        ...this.state.newworker,\n        [event.target.name]: event.target.value\n      }\n    });\n  };\n\n  handleSubmit = (e, newworker) => {\n    e.preventDefault();\n    this.props.addWorker(this.state.newworker, this.props.jwtSTORE);\n    this.setState({\n      newworker: {\n        name: \"\",\n        picture: \"\",\n        prisonId: this.props.prisonIdSTORE,\n        availability: false,\n        skills: \"\"\n      }\n    });\n  };\n\n  handleDelete = (id, authToken) => {\n    this.props.deleteWorker(id, authToken);\n  };\n\n  handleUpdate = (workerdata, id, authToken) => {\n    this.props.updateWorker(workerdata, id, authToken);\n  };\n\n  render() {\n    return (\n      <div className=\"WorkersMgmtWrapper\">\n        <form\n          className=\"WorkerFormWrapper\"\n          onSubmit={e => this.handleSubmit(e, this.state.newworker)}\n        >\n          <Button size=\"lg\" onClick={this.props.handleLogOut}>\n            Log Out\n          </Button>\n          <InputGroup size=\"lg\">\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText className=\"Purple\">Worker Name:</InputGroupText>\n            </InputGroupAddon>\n            <Input\n              value={this.state.newworker.name}\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChanges}\n            />\n            <InputGroupButtonDropdown\n              addonType=\"append\"\n              isOpen={this.state.dropdownOpen}\n              toggle={this.toggleDropDown}\n            >\n              <DropdownToggle className=\"Purple\" caret>\n                {this.state.newworker.availability\n                  ? `AVAILABLE FOR WORK LEAVE`\n                  : `NOT AVAILABLE FOR WORK LEAVE`}\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem onClick={this.toggleWlOn}>\n                  Available for Work Leave\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={this.toggleWlOff}>\n                  Not Available for Work Leave\n                </DropdownItem>\n              </DropdownMenu>\n            </InputGroupButtonDropdown>\n          </InputGroup>\n          <InputGroup size=\"lg\">\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText className=\"Purple\">\n                New Worker Skills (Seperate /w Commas):\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              value={this.state.newworker.skills}\n              type=\"text\"\n              name=\"skills\"\n              onChange={this.handleChanges}\n            />\n          </InputGroup>\n          <Button className=\"Purple\" type=\"submit\">\n            Add Worker\n          </Button>\n        </form>\n        <Workers\n          jwtSTORE={this.props.jwtSTORE}\n          updateWorker={this.handleUpdate}\n          deleteWorker={this.handleDelete}\n          linkedworkersStore={this.props.linkedworkersStore}\n          error={this.props.errorStore}\n        />\n      </div>\n    );\n  }\n}\n\nexport default WorkersMgmt;\n"]},"metadata":{},"sourceType":"module"}