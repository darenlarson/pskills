{"ast":null,"code":"import _defineProperty from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/darenlarson/Code/pskills/client/src/components/Login/Authentication.js\";\nimport React from \"react\";\nimport \"reactstrap\";\nimport Register from \"./Register\";\nimport { dismissLoginError, loginUser, logoutUser, persistLogin, getPrisons } from \"../../store/actions/\";\nimport { connect } from \"react-redux\";\nimport AdminView from \"../../views/AdminView\";\nimport Login from \"./Login\";\nimport { Alert } from \"reactstrap\";\n\nvar Authentication = function Authentication(AdminView) {\n  return function (Login) {\n    return (\n      /*#__PURE__*/\n      function (_React$Component) {\n        _inherits(_class2, _React$Component);\n\n        function _class2(props) {\n          var _this;\n\n          _classCallCheck(this, _class2);\n\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(_class2).call(this, props));\n\n          _this.handleChanges = function (e) {\n            _this.setState({\n              login: _objectSpread({}, _this.state.login, _defineProperty({}, e.target.name, e.target.value))\n            });\n          };\n\n          _this.onDismiss = function () {\n            _this.setState({\n              login: \"\",\n              password: \"\"\n            });\n\n            _this.props.dismissLoginError();\n          };\n\n          _this.submitLogin = function (e) {\n            e.preventDefault();\n\n            if (!_this.state.login.username || !_this.state.login.password) {\n              _this.setState({\n                login: {\n                  username: \"\",\n                  password: \"\"\n                }\n              });\n\n              alert(\"Invalid login, please enter Username and Password\");\n            } else {\n              _this.props.loginUser(_this.state.login);\n            }\n          };\n\n          _this.toggleRegister = function () {\n            _this.setState(function (currentState) {\n              return {\n                registering: !currentState.registering\n              };\n            });\n          };\n\n          _this.handleLogOut = function () {\n            localStorage.clear();\n\n            _this.props.logoutUser();\n          };\n\n          _this.conditionalRender = function () {\n            if (_this.props.loggedinSTORE) {\n              return React.createElement(AdminView, {\n                handleLogOut: _this.handleLogOut,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81\n                },\n                __self: this\n              });\n            } else {\n              if (_this.state.registering) {\n                return React.createElement(Register, {\n                  toggleRegister: _this.toggleRegister,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 84\n                  },\n                  __self: this\n                });\n              } else {\n                return React.createElement(Login, {\n                  password: _this.state.login.password,\n                  username: _this.state.login.username,\n                  handleChanges: _this.handleChanges,\n                  submitLogin: _this.submitLogin,\n                  toggleRegister: _this.toggleRegister,\n                  getPrisons: _this.props.getPrisons,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 87\n                  },\n                  __self: this\n                });\n              }\n            }\n          };\n\n          _this.state = {\n            loggedin: false,\n            registering: false,\n            login: {\n              username: \"\",\n              password: \"\"\n            }\n          };\n          return _this;\n        }\n\n        _createClass(_class2, [{\n          key: \"componentDidMount\",\n          value: function componentDidMount() {\n            this.authCheck();\n          }\n        }, {\n          key: \"authCheck\",\n          value: function authCheck() {\n            JSON.parse(localStorage.getItem(\"user\")) && this.props.persistLogin(JSON.parse(localStorage.getItem(\"user\")));\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            return this.props.loginerror ? React.createElement(Alert, {\n              className: \"LoginError\",\n              color: \"dark\",\n              isOpen: this.state.visible,\n              toggle: this.onDismiss,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, this.props.loginerror) : this.conditionalRender();\n          }\n        }]);\n\n        return _class2;\n      }(React.Component)\n    );\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loggedinSTORE: state.loggedin,\n    errorSTORE: state.error,\n    loginerror: state.loginerror\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser: loginUser,\n  logoutUser: logoutUser,\n  persistLogin: persistLogin,\n  getPrisons: getPrisons,\n  dismissLoginError: dismissLoginError\n})(Authentication(AdminView)(Login));","map":{"version":3,"sources":["/Users/darenlarson/Code/pskills/client/src/components/Login/Authentication.js"],"names":["React","Register","dismissLoginError","loginUser","logoutUser","persistLogin","getPrisons","connect","AdminView","Login","Alert","Authentication","props","handleChanges","e","setState","login","state","target","name","value","onDismiss","password","submitLogin","preventDefault","username","alert","toggleRegister","currentState","registering","handleLogOut","localStorage","clear","conditionalRender","loggedinSTORE","loggedin","authCheck","JSON","parse","getItem","loginerror","visible","Component","mapStateToProps","errorSTORE","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {} from \"reactstrap\";\nimport Register from \"./Register\";\nimport {\n  dismissLoginError,\n  loginUser,\n  logoutUser,\n  persistLogin,\n  getPrisons\n} from \"../../store/actions/\";\nimport { connect } from \"react-redux\";\nimport AdminView from \"../../views/AdminView\";\nimport Login from \"./Login\";\nimport { Alert } from \"reactstrap\";\n\nconst Authentication = AdminView => Login =>\n  class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loggedin: false,\n        registering: false,\n        login: {\n          username: \"\",\n          password: \"\"\n        }\n      };\n    }\n\n    componentDidMount() {\n      this.authCheck();\n    }\n\n    authCheck() {\n      JSON.parse(localStorage.getItem(\"user\")) &&\n        this.props.persistLogin(JSON.parse(localStorage.getItem(\"user\")));\n    }\n\n    handleChanges = e => {\n      this.setState({\n        login: {\n          ...this.state.login,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    onDismiss = () => {\n      this.setState({ login: \"\", password: \"\" });\n      this.props.dismissLoginError();\n    };\n\n    submitLogin = e => {\n      e.preventDefault();\n      if (!this.state.login.username || !this.state.login.password) {\n        this.setState({\n          login: {\n            username: \"\",\n            password: \"\"\n          }\n        });\n        alert(\"Invalid login, please enter Username and Password\");\n      } else {\n        this.props.loginUser(this.state.login);\n      }\n    };\n\n    toggleRegister = () => {\n      this.setState(currentState => ({\n        registering: !currentState.registering\n      }));\n    };\n\n    handleLogOut = () => {\n      localStorage.clear();\n      this.props.logoutUser();\n    };\n\n    conditionalRender = () => {\n      if (this.props.loggedinSTORE) {\n        return <AdminView handleLogOut={this.handleLogOut} />;\n      } else {\n        if (this.state.registering) {\n          return <Register toggleRegister={this.toggleRegister} />;\n        } else {\n          return (\n            <Login\n              password={this.state.login.password}\n              username={this.state.login.username}\n              handleChanges={this.handleChanges}\n              submitLogin={this.submitLogin}\n              toggleRegister={this.toggleRegister}\n              getPrisons={this.props.getPrisons}\n            />\n          );\n        }\n      }\n    };\n\n    render() {\n      return this.props.loginerror ? (\n        <Alert  className=\"LoginError\" color=\"dark\" isOpen={this.state.visible} toggle={this.onDismiss}>\n          {this.props.loginerror}\n        </Alert>\n      ) : (\n        this.conditionalRender()\n      );\n    }\n  };\n\nconst mapStateToProps = state => ({\n  loggedinSTORE: state.loggedin,\n  errorSTORE: state.error,\n  loginerror: state.loginerror\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser, logoutUser, persistLogin, getPrisons, dismissLoginError }\n)(Authentication(AdminView)(Login));\n"]},"metadata":{},"sourceType":"module"}