{"ast":null,"code":"import _defineProperty from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/darenlarson/Code/pskills/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/darenlarson/Code/pskills/client/src/components/Admin/Worker.js\";\nimport React from \"react\";\nimport { Button, InputGroup, InputGroupAddon, InputGroupText, Input, Table } from \"reactstrap\";\n\nvar Worker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Worker, _React$Component);\n\n  function Worker(props) {\n    var _this;\n\n    _classCallCheck(this, Worker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Worker).call(this, props));\n\n    _this.toggleUpdate = function (workerdata) {\n      if (_this.state.showasform) {\n        _this.setState({\n          updatedata: null\n        });\n      } else {\n        _this.setState({\n          updatedata: {\n            name: _this.props.worker.name,\n            picture: _this.props.worker.picture,\n            prisonId: _this.props.worker.prisonId,\n            availability: _this.props.worker.availability,\n            skills: _this.props.worker.skills\n          }\n        });\n      }\n\n      _this.setState(function (currentState) {\n        return {\n          showasform: !currentState.showasform\n        };\n      });\n    };\n\n    _this.submitHandler = function (e, updatedata, id, authToken) {\n      e.preventDefault();\n\n      _this.props.updateWorker(updatedata, id, authToken);\n\n      _this.toggleUpdate();\n    };\n\n    _this.handleChanges = function (e) {\n      _this.setState({\n        updatedata: _objectSpread({}, _this.state.updatedata, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.handleCheckbox = function (e) {\n      _this.setState({\n        updatedata: _objectSpread({}, _this.state.updatedata, {\n          availability: e.target.checked\n        })\n      });\n    };\n\n    _this.state = {\n      showasform: false,\n      updatedata: null\n    };\n    _this.handleCheckbox = _this.handleCheckbox.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Worker, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.showasform ? React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this2.submitHandler(e, _this2.state.updatedata, _this2.props.worker.id, _this2.props.jwtSTORE);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.updatedata.name.toUpperCase(), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Worker Name:\"), React.createElement(Input, {\n        value: this.state.updatedata.name,\n        name: \"name\",\n        onChange: this.handleChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Worker Skills:\"), React.createElement(Input, {\n        name: \"skills\",\n        value: this.state.updatedata.skills,\n        onChange: this.handleChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"AVAILABLE FOR WORK LEAVE\", React.createElement(Input, {\n        checked: this.state.updatedata.availability,\n        addon: true,\n        type: \"checkbox\",\n        onClick: this.handleCheckbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })))), React.createElement(Button, {\n        className: \"Purple\",\n        onClick: function onClick() {\n          return _this2.toggleUpdate(_this2.props.worker.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" \", \"Cancel Updating\", \" \"), React.createElement(Button, {\n        className: \"Purple\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" Apply Updating \")) : React.createElement(\"div\", {\n        className: \"WorkerDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"TableRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.props.worker.id), React.createElement(\"td\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.props.worker.name), React.createElement(\"td\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.props.worker.availability ? \"Work Leave Available\" : \"No Work Leave\"), React.createElement(\"td\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.props.worker.skills)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        className: \"Purple\",\n        onClick: function onClick() {\n          return _this2.props.deleteWorker(_this2.props.worker.id, _this2.props.jwtSTORE);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" \", \"Delete Worker\", \" \"), React.createElement(Button, {\n        size: \"sm\",\n        className: \"Purple\",\n        onClick: function onClick() {\n          return _this2.toggleUpdate(_this2.props.worker);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \" \", \"Update Worker\", \" \"))));\n    }\n  }]);\n\n  return Worker;\n}(React.Component);\n\nexport default Worker;","map":{"version":3,"sources":["/Users/darenlarson/Code/pskills/client/src/components/Admin/Worker.js"],"names":["React","Button","InputGroup","InputGroupAddon","InputGroupText","Input","Table","Worker","props","toggleUpdate","workerdata","state","showasform","setState","updatedata","name","worker","picture","prisonId","availability","skills","currentState","submitHandler","e","id","authToken","preventDefault","updateWorker","handleChanges","target","value","handleCheckbox","checked","bind","jwtSTORE","toUpperCase","deleteWorker","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,cAJF,EAKEC,KALF,EAMEC,KANF,QAOO,YAPP;;IASMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UASnBC,YATmB,GASJ,UAAAC,UAAU,EAAI;AAC3B,UAAI,MAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzB,cAAKC,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD,OAJD,MAIO;AACL,cAAKD,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAE;AACVC,YAAAA,IAAI,EAAE,MAAKP,KAAL,CAAWQ,MAAX,CAAkBD,IADd;AAEVE,YAAAA,OAAO,EAAE,MAAKT,KAAL,CAAWQ,MAAX,CAAkBC,OAFjB;AAGVC,YAAAA,QAAQ,EAAE,MAAKV,KAAL,CAAWQ,MAAX,CAAkBE,QAHlB;AAIVC,YAAAA,YAAY,EAAE,MAAKX,KAAL,CAAWQ,MAAX,CAAkBG,YAJtB;AAKVC,YAAAA,MAAM,EAAE,MAAKZ,KAAL,CAAWQ,MAAX,CAAkBI;AALhB;AADA,SAAd;AASD;;AACD,YAAKP,QAAL,CAAc,UAAAQ,YAAY;AAAA,eAAK;AAC7BT,UAAAA,UAAU,EAAE,CAACS,YAAY,CAACT;AADG,SAAL;AAAA,OAA1B;AAGD,KA5BkB;;AAAA,UA8BnBU,aA9BmB,GA8BH,UAACC,CAAD,EAAIT,UAAJ,EAAgBU,EAAhB,EAAoBC,SAApB,EAAkC;AAChDF,MAAAA,CAAC,CAACG,cAAF;;AACA,YAAKlB,KAAL,CAAWmB,YAAX,CAAwBb,UAAxB,EAAoCU,EAApC,EAAwCC,SAAxC;;AACA,YAAKhB,YAAL;AACD,KAlCkB;;AAAA,UAoCnBmB,aApCmB,GAoCH,UAAAL,CAAC,EAAI;AACnB,YAAKV,QAAL,CAAc;AACZC,QAAAA,UAAU,oBACL,MAAKH,KAAL,CAAWG,UADN,sBAEPS,CAAC,CAACM,MAAF,CAASd,IAFF,EAESQ,CAAC,CAACM,MAAF,CAASC,KAFlB;AADE,OAAd;AAMD,KA3CkB;;AAAA,UA6CnBC,cA7CmB,GA6CF,UAACR,CAAD,EAAO;AACtB,YAAKV,QAAL,CAAc;AACVC,QAAAA,UAAU,oBACL,MAAKH,KAAL,CAAWG,UADN;AAERK,UAAAA,YAAY,EAAEI,CAAC,CAACM,MAAF,CAASG;AAFf;AADA,OAAd;AAMD,KApDkB;;AAEjB,UAAKrB,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXE,MAAAA,UAAU,EAAE;AAFD,KAAb;AAIA,UAAKiB,cAAL,GAAsB,MAAKA,cAAL,CAAoBE,IAApB,uDAAtB;AANiB;AAOlB;;;;6BA+CQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKtB,KAAL,CAAWC,UAAX,GACC;AACE,QAAA,QAAQ,EAAE,kBAAAW,CAAC;AAAA,iBACT,MAAI,CAACD,aAAL,CAAmBC,CAAnB,EAAsB,MAAI,CAACZ,KAAL,CAAWG,UAAjC,EAA6C,MAAI,CAACN,KAAL,CAAWQ,MAAX,CAAkBQ,EAA/D,EAAmE,MAAI,CAAChB,KAAL,CAAW0B,QAA9E,CADS;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKvB,KAAL,CAAWG,UAAX,CAAsBC,IAAtB,CAA2BoB,WAA3B,EALH,EAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWG,UAAX,CAAsBC,IAD/B;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAE,KAAKa,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CANF,EAgBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAIE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWG,UAAX,CAAsBM,MAF/B;AAGE,QAAA,QAAQ,EAAE,KAAKQ,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EASE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE,oBAAC,KAAD;AACE,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWG,UAAX,CAAsBK,YADjC;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,OAAO,EAAE,KAAKY,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CATF,CAhBF,EAsCE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACtB,YAAL,CAAkB,MAAI,CAACD,KAAL,CAAWQ,MAAX,CAAkBQ,EAApC,CAAN;AAAA,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,qBAEkB,GAFlB,CAtCF,EA2CE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA3CF,CADD,GA+CG;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,KAAK,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKhB,KAAL,CAAWQ,MAAX,CAAkBQ,EAApD,CADF,EAEE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKhB,KAAL,CAAWQ,MAAX,CAAkBD,IAAxC,CAFF,EAGE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKP,KAAL,CAAWQ,MAAX,CAAkBG,YAAlB,2CAAtB,CAHF,EAIE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKX,KAAL,CAAWQ,MAAX,CAAkBI,MAAxC,CAJF,CADA,CADA,CADE,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACZ,KAAL,CAAW4B,YAAX,CAAwB,MAAI,CAAC5B,KAAL,CAAWQ,MAAX,CAAkBQ,EAA1C,EAA8C,MAAI,CAAChB,KAAL,CAAW0B,QAAzD,CAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,GALH,mBAMgB,GANhB,CADF,EAUE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACzB,YAAL,CAAkB,MAAI,CAACD,KAAL,CAAWQ,MAA7B,CAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,GALH,mBAMgB,GANhB,CAVF,CAXA,CAhDN,CADF;AAmFD;;;;EA3IkBhB,KAAK,CAACqC,S;;AA8I3B,eAAe9B,MAAf","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  Table\n} from \"reactstrap\";\n\nclass Worker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showasform: false,\n      updatedata: null,\n    };\n    this.handleCheckbox = this.handleCheckbox.bind(this)\n  }\n\n  toggleUpdate = workerdata => {\n    if (this.state.showasform) {\n      this.setState({\n        updatedata: null\n      });\n    } else {\n      this.setState({\n        updatedata: {\n          name: this.props.worker.name,\n          picture: this.props.worker.picture,\n          prisonId: this.props.worker.prisonId,\n          availability: this.props.worker.availability,\n          skills: this.props.worker.skills\n        }\n      });\n    }\n    this.setState(currentState => ({\n      showasform: !currentState.showasform\n    }));\n  };\n\n  submitHandler = (e, updatedata, id, authToken) => {\n    e.preventDefault();\n    this.props.updateWorker(updatedata, id, authToken);\n    this.toggleUpdate();\n  };\n\n  handleChanges = e => {\n    this.setState({\n      updatedata: {\n        ...this.state.updatedata,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  handleCheckbox = (e) => {\n    this.setState({\n        updatedata: {\n          ...this.state.updatedata,\n          availability: e.target.checked\n        }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.showasform ? (\n          <form\n            onSubmit={e =>\n              this.submitHandler(e, this.state.updatedata, this.props.worker.id, this.props.jwtSTORE)\n            }\n          >\n            {this.state.updatedata.name.toUpperCase()}\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                Worker Name:\n              </InputGroupAddon>\n              <Input\n                value={this.state.updatedata.name}\n                name=\"name\"\n                onChange={this.handleChanges}\n              />\n            </InputGroup>\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                Worker Skills:\n              </InputGroupAddon>\n              <Input\n                name=\"skills\"\n                value={this.state.updatedata.skills}\n                onChange={this.handleChanges}\n              />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>\n                  AVAILABLE FOR WORK LEAVE\n                  <Input\n                    checked={this.state.updatedata.availability}\n                    addon\n                    type=\"checkbox\"\n                    onClick={this.handleCheckbox}\n                  />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n\n            <Button className='Purple' onClick={() => this.toggleUpdate(this.props.worker.id)}>\n              {\" \"}\n              Cancel Updating{\" \"}\n            </Button>\n\n            <Button className='Purple' type=\"submit\"> Apply Updating </Button>\n          </form>\n        ) : (\n            <div className=\"WorkerDetails\">\n          <Table>\n          <tbody>\n          <tr className=\"TableRow\">\n            <th className=\"text\" scope=\"row\">{this.props.worker.id}</th>\n            <td className=\"text\">{this.props.worker.name}</td>\n            <td className=\"text\">{this.props.worker.availability ? `Work Leave Available` : `No Work Leave`}</td>\n            <td className=\"text\">{this.props.worker.skills}</td>\n          </tr>\n            </tbody>\n            </Table>\n            <div>\n              <Button\n                size=\"sm\"\n                className='Purple'\n                onClick={() => this.props.deleteWorker(this.props.worker.id, this.props.jwtSTORE)}\n              >\n                {\" \"}\n                Delete Worker{\" \"}\n                \n              </Button>\n              <Button\n                size=\"sm\"\n                className='Purple'\n                onClick={() => this.toggleUpdate(this.props.worker)}\n              >\n                {\" \"}\n                Update Worker{\" \"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Worker;\n"]},"metadata":{},"sourceType":"module"}